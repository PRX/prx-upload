version: 0.1
environment_variables:
  plaintext:
    BUILD_PHASE_MARKER: build_phase_complete
phases:
  install:
    commands:
      - apt-get update -y
      - apt-get install -y jq
  pre_build:
    commands:
      - npm install
  build:
    commands:
      - npm test
      - touch $BUILD_PHASE_MARKER
  post_build:
    commands:
      - test -e $BUILD_PHASE_MARKER
      - echo Zipping Lambda code
      - zip -r upload.prx.org-$(basename $CODEBUILD_SOURCE_VERSION) . -x .git
      - echo Copying zipped Lambda to S3 $CODE_BUCKET
      - aws s3 cp upload.prx.org-$(basename $CODEBUILD_SOURCE_VERSION) s3://$CODE_BUCKET/upload.prx.org-$(basename $CODEBUILD_SOURCE_VERSION)
      - aws s3 cp s3://$TEMPLATE_CONFIG_BUCKET/$TEMPLATE_CONFIG_ARTIFACT $TEMPLATE_CONFIG_ARTIFACT
      - unzip $TEMPLATE_CONFIG_ARTIFACT
      - jq --arg zip upload.prx.org-$(basename $CODEBUILD_SOURCE_VERSION) '.Parameters.UploadLambdaZipName = $zip' staging.json > staging2.json
      - rm staging.json && mv staging2.json staging.json
      - zip $TEMPLATE_CONFIG_ARTIFACT staging.json
      - aws s3 cp $TEMPLATE_CONFIG_ARTIFACT s3://$TEMPLATE_CONFIG_BUCKET/
artifacts:
  files:
  - README.md
